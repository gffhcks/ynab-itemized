"""initial_schema

Revision ID: 64fa28c8949c
Revises:
Create Date: 2025-10-29 21:06:17.929994

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "64fa28c8949c"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "ynab_transactions",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("ynab_id", sa.String(), nullable=False),
        sa.Column("account_id", sa.String(), nullable=False),
        sa.Column("category_id", sa.String(), nullable=True),
        sa.Column("payee_name", sa.String(), nullable=True),
        sa.Column("memo", sa.Text(), nullable=True),
        sa.Column("amount", sa.Numeric(precision=15, scale=3), nullable=False),
        sa.Column("date", sa.Date(), nullable=False),
        sa.Column("cleared", sa.String(), nullable=False),
        sa.Column("approved", sa.Boolean(), nullable=False),
        sa.Column("flag_color", sa.String(), nullable=True),
        sa.Column("import_id", sa.String(), nullable=True),
        sa.Column("has_subtransactions", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_ynab_date_amount", "ynab_transactions", ["date", "amount"], unique=False
    )
    op.create_index(
        op.f("ix_ynab_transactions_ynab_id"),
        "ynab_transactions",
        ["ynab_id"],
        unique=True,
    )
    op.create_table(
        "itemized_transactions",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("ynab_transaction_id", sa.String(), nullable=True),
        sa.Column("transaction_date", sa.Date(), nullable=False),
        sa.Column("total_amount", sa.Numeric(precision=15, scale=3), nullable=False),
        sa.Column("merchant_name", sa.String(), nullable=True),
        sa.Column("match_status", sa.String(), nullable=False),
        sa.Column("match_confidence", sa.Numeric(precision=3, scale=2), nullable=True),
        sa.Column("match_method", sa.String(), nullable=True),
        sa.Column("match_notes", sa.Text(), nullable=True),
        sa.Column("source", sa.String(), nullable=False),
        sa.Column("source_transaction_id", sa.String(), nullable=True),
        sa.Column("subtotal", sa.Numeric(precision=10, scale=2), nullable=True),
        sa.Column("total_tax", sa.Numeric(precision=10, scale=2), nullable=True),
        sa.Column("total_discount", sa.Numeric(precision=10, scale=2), nullable=True),
        sa.Column("tip_amount", sa.Numeric(precision=10, scale=2), nullable=True),
        sa.Column("store_name", sa.String(), nullable=True),
        sa.Column("store_location", sa.String(), nullable=True),
        sa.Column("store_phone", sa.String(), nullable=True),
        sa.Column("receipt_number", sa.String(), nullable=True),
        sa.Column("payment_method", sa.String(), nullable=True),
        sa.Column("cashier", sa.String(), nullable=True),
        sa.Column("register_number", sa.String(), nullable=True),
        sa.Column("receipt_image_path", sa.String(), nullable=True),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column("tags", sa.JSON(), nullable=True),
        sa.Column("extra_metadata", sa.JSON(), nullable=True),
        sa.Column("subtransactions_synced_at", sa.DateTime(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["ynab_transaction_id"],
            ["ynab_transactions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_itemized_date_amount",
        "itemized_transactions",
        ["transaction_date", "total_amount"],
        unique=False,
    )
    op.create_index(
        "idx_itemized_match_status",
        "itemized_transactions",
        ["match_status"],
        unique=False,
    )
    op.create_table(
        "transaction_items",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("transaction_id", sa.String(), nullable=False),
        sa.Column("ynab_subtransaction_id", sa.String(), nullable=True),
        sa.Column("ynab_category_id", sa.String(), nullable=True),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("amount", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("quantity", sa.Integer(), nullable=True),
        sa.Column("unit_price", sa.Numeric(precision=10, scale=2), nullable=True),
        sa.Column("category", sa.String(), nullable=True),
        sa.Column("subcategory", sa.String(), nullable=True),
        sa.Column("brand", sa.String(), nullable=True),
        sa.Column("sku", sa.String(), nullable=True),
        sa.Column("barcode", sa.String(), nullable=True),
        sa.Column("discount_amount", sa.Numeric(precision=10, scale=2), nullable=True),
        sa.Column("tax_amount", sa.Numeric(precision=10, scale=2), nullable=True),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column("extra_metadata", sa.JSON(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["transaction_id"],
            ["itemized_transactions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_transaction_items_ynab_subtransaction_id"),
        "transaction_items",
        ["ynab_subtransaction_id"],
        unique=False,
    )
    op.create_table(
        "transaction_matches",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("ynab_transaction_id", sa.String(), nullable=False),
        sa.Column("itemized_transaction_id", sa.String(), nullable=False),
        sa.Column("match_score", sa.Numeric(precision=3, scale=2), nullable=False),
        sa.Column("match_method", sa.String(), nullable=False),
        sa.Column("match_criteria", sa.JSON(), nullable=True),
        sa.Column("status", sa.String(), nullable=False),
        sa.Column("reviewed_by", sa.String(), nullable=True),
        sa.Column("reviewed_at", sa.DateTime(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["itemized_transaction_id"],
            ["itemized_transactions.id"],
        ),
        sa.ForeignKeyConstraint(
            ["ynab_transaction_id"],
            ["ynab_transactions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("idx_match_status", "transaction_matches", ["status"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("idx_match_status", table_name="transaction_matches")
    op.drop_table("transaction_matches")
    op.drop_index(
        op.f("ix_transaction_items_ynab_subtransaction_id"),
        table_name="transaction_items",
    )
    op.drop_table("transaction_items")
    op.drop_index("idx_itemized_match_status", table_name="itemized_transactions")
    op.drop_index("idx_itemized_date_amount", table_name="itemized_transactions")
    op.drop_table("itemized_transactions")
    op.drop_index(op.f("ix_ynab_transactions_ynab_id"), table_name="ynab_transactions")
    op.drop_index("idx_ynab_date_amount", table_name="ynab_transactions")
    op.drop_table("ynab_transactions")
    # ### end Alembic commands ###
